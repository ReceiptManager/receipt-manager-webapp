/**
 * DO NOT EDIT
 *
 * This file was automatically generated by
 *   https://github.com/Polymer/tools/tree/master/packages/gen-typescript-declarations
 *
 * To modify these typings, edit the source file(s):
 *   animations/transform-animation.js
 */

import {Polymer} from '@polymer/polymer/lib/legacy/polymer-fn.js';

import {NeonAnimationBehavior} from '../neon-animation-behavior.js';

import {LegacyElementMixin} from '@polymer/polymer/lib/legacy/legacy-element-mixin.js';

/**
 * `<transform-animation>` animates a custom transform on an element. Use this to
 * animate multiple transform properties, or to apply a custom transform value.
 *
 * Configuration:
 * ```
 * {
 *   name: 'transform-animation',
 *   node: <node>,
 *   transformOrigin: <transform-origin>,
 *   transformFrom: <transform-from-string>,
 *   transformTo: <transform-to-string>,
 *   timing: <animation-timing>
 * }
 * ```
 */
interface TransformAnimationElement extends NeonAnimationBehavior, LegacyElementMixin, HTMLElement {
  configure(config: {node: Element, transformOrigin?: string, transformFrom?: string, transformTo?: string, timing?: object|null}): any;
}

export {TransformAnimationElement};

declare global {

  interface HTMLElementTagNameMap {
    "transform-animation": TransformAnimationElement;
  }
}
