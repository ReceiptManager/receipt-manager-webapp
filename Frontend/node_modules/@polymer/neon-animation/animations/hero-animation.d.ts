/**
 * DO NOT EDIT
 *
 * This file was automatically generated by
 *   https://github.com/Polymer/tools/tree/master/packages/gen-typescript-declarations
 *
 * To modify these typings, edit the source file(s):
 *   animations/hero-animation.js
 */

import {Polymer} from '@polymer/polymer/lib/legacy/polymer-fn.js';

import {NeonSharedElementAnimationBehavior} from '../neon-shared-element-animation-behavior.js';

import {LegacyElementMixin} from '@polymer/polymer/lib/legacy/legacy-element-mixin.js';

/**
 * `<hero-animation>` is a shared element animation that scales and transform an
 * element such that it appears to be shared between two pages. Use this in
 * `<neon-animated-pages>`. The source page should use this animation in an 'exit'
 * animation and set the `fromPage` configuration property to itself, and the
 * destination page should use this animation in an `entry` animation and set the
 * `toPage` configuration property to itself. They should also define the hero
 * elements in the `sharedElements` property (not a configuration property, see
 * `NeonSharedElementAnimatableBehavior`).
 *
 * Configuration:
 * ```
 * {
 *   name: 'hero-animation',
 *   id: <shared-element-id>,
 *   timing: <animation-timing>,
 *   toPage: <node>, /* define for the destination page *\/
 *   fromPage: <node>, /* define for the source page *\/
 * }
 * ```
 */
interface HeroAnimationElement extends NeonSharedElementAnimationBehavior, LegacyElementMixin, HTMLElement {
  complete(config: any): any;
  configure(config: any): any;
}

export {HeroAnimationElement};

declare global {

  interface HTMLElementTagNameMap {
    "hero-animation": HeroAnimationElement;
  }
}
